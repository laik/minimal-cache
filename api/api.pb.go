// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package api // import "github.com/laik/minimal-cache/api"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "github.com/mwitkow/go-proto-validators"

import github_com_laik_minimal_cache_raw "github.com/laik/minimal-cache/raw"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// FSMCommandType describes all available commands that FSM can apply.
type FSMCommandType int32

const (
	FSMApplyCommand  FSMCommandType = 0
	FSMApplyMetadata FSMCommandType = 1
)

var FSMCommandType_name = map[int32]string{
	0: "APPLY_COMMAND",
	1: "APPLY_METADATA",
}
var FSMCommandType_value = map[string]int32{
	"APPLY_COMMAND":  0,
	"APPLY_METADATA": 1,
}

func (x FSMCommandType) String() string {
	return proto.EnumName(FSMCommandType_name, int32(x))
}
func (FSMCommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{0}
}

// CommandExecutionReply describes all available replies.
type CommandExecutionReply int32

const (
	NilCommandReply    CommandExecutionReply = 0
	OkCommandReply     CommandExecutionReply = 1
	StringCommandReply CommandExecutionReply = 2
	SliceCommandReply  CommandExecutionReply = 3
	ErrCommandReply    CommandExecutionReply = 4
)

var CommandExecutionReply_name = map[int32]string{
	0: "NIL",
	1: "OK",
	2: "STRING",
	3: "SLICE",
	4: "ERR",
}
var CommandExecutionReply_value = map[string]int32{
	"NIL":    0,
	"OK":     1,
	"STRING": 2,
	"SLICE":  3,
	"ERR":    4,
}

func (x CommandExecutionReply) String() string {
	return proto.EnumName(CommandExecutionReply_name, int32(x))
}
func (CommandExecutionReply) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{1}
}

// NodeState describes member state.
type NodeState int32

const (
	Voter    NodeState = 0
	Nonvoter NodeState = 1
	Staging  NodeState = 2
	Suffrage NodeState = 3
)

var NodeState_name = map[int32]string{
	0: "VOTER",
	1: "NONVOTER",
	2: "STAGING",
	3: "SUFFRAGE",
}
var NodeState_value = map[string]int32{
	"VOTER":    0,
	"NONVOTER": 1,
	"STAGING":  2,
	"SUFFRAGE": 3,
}

func (x NodeState) String() string {
	return proto.EnumName(NodeState_name, int32(x))
}
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{2}
}

// FSMCommand is a FSM command.
type FSMCommand struct {
	Type                 FSMCommandType                        `protobuf:"varint,1,opt,name=type,proto3,enum=api.FSMCommandType" json:"type,omitempty"`
	Command              github_com_laik_minimal_cache_raw.Raw `protobuf:"bytes,2,opt,name=command,proto3,customtype=github.com/laik/minimal-cache/raw.Raw" json:"command"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *FSMCommand) Reset()         { *m = FSMCommand{} }
func (m *FSMCommand) String() string { return proto.CompactTextString(m) }
func (*FSMCommand) ProtoMessage()    {}
func (*FSMCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{0}
}
func (m *FSMCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FSMCommand.Unmarshal(m, b)
}
func (m *FSMCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FSMCommand.Marshal(b, m, deterministic)
}
func (dst *FSMCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FSMCommand.Merge(dst, src)
}
func (m *FSMCommand) XXX_Size() int {
	return xxx_messageInfo_FSMCommand.Size(m)
}
func (m *FSMCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_FSMCommand.DiscardUnknown(m)
}

var xxx_messageInfo_FSMCommand proto.InternalMessageInfo

func (m *FSMCommand) GetType() FSMCommandType {
	if m != nil {
		return m.Type
	}
	return FSMApplyCommand
}

// UpdateMetadataRequest is used to update meta info in the raft FSM.
type UpdateMetadataRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMetadataRequest) Reset()         { *m = UpdateMetadataRequest{} }
func (m *UpdateMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateMetadataRequest) ProtoMessage()    {}
func (*UpdateMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{1}
}
func (m *UpdateMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMetadataRequest.Unmarshal(m, b)
}
func (m *UpdateMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMetadataRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMetadataRequest.Merge(dst, src)
}
func (m *UpdateMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateMetadataRequest.Size(m)
}
func (m *UpdateMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMetadataRequest proto.InternalMessageInfo

func (m *UpdateMetadataRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateMetadataRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// UpdateMetadataResponse is a response on the UpdateMetadataRequest.
type UpdateMetadataResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMetadataResponse) Reset()         { *m = UpdateMetadataResponse{} }
func (m *UpdateMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateMetadataResponse) ProtoMessage()    {}
func (*UpdateMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{2}
}
func (m *UpdateMetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMetadataResponse.Unmarshal(m, b)
}
func (m *UpdateMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMetadataResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMetadataResponse.Merge(dst, src)
}
func (m *UpdateMetadataResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateMetadataResponse.Size(m)
}
func (m *UpdateMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMetadataResponse proto.InternalMessageInfo

// ExecuteCommandRequest is a request to execute a command.
type ExecuteCommandRequest struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteCommandRequest) Reset()         { *m = ExecuteCommandRequest{} }
func (m *ExecuteCommandRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteCommandRequest) ProtoMessage()    {}
func (*ExecuteCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{3}
}
func (m *ExecuteCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteCommandRequest.Unmarshal(m, b)
}
func (m *ExecuteCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteCommandRequest.Marshal(b, m, deterministic)
}
func (dst *ExecuteCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteCommandRequest.Merge(dst, src)
}
func (m *ExecuteCommandRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteCommandRequest.Size(m)
}
func (m *ExecuteCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteCommandRequest proto.InternalMessageInfo

func (m *ExecuteCommandRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

// ExecuteCommandResponse is a response on the ExecuteCommandRequest.
type ExecuteCommandResponse struct {
	Reply                CommandExecutionReply `protobuf:"varint,1,opt,name=reply,proto3,enum=api.CommandExecutionReply" json:"reply,omitempty"`
	Item                 string                `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Items                []string              `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ExecuteCommandResponse) Reset()         { *m = ExecuteCommandResponse{} }
func (m *ExecuteCommandResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteCommandResponse) ProtoMessage()    {}
func (*ExecuteCommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{4}
}
func (m *ExecuteCommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteCommandResponse.Unmarshal(m, b)
}
func (m *ExecuteCommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteCommandResponse.Marshal(b, m, deterministic)
}
func (dst *ExecuteCommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteCommandResponse.Merge(dst, src)
}
func (m *ExecuteCommandResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteCommandResponse.Size(m)
}
func (m *ExecuteCommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteCommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteCommandResponse proto.InternalMessageInfo

func (m *ExecuteCommandResponse) GetReply() CommandExecutionReply {
	if m != nil {
		return m.Reply
	}
	return NilCommandReply
}

func (m *ExecuteCommandResponse) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

func (m *ExecuteCommandResponse) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

// AddToClusterRequest is a request to add a new raft node to the cluster.
type AddToClusterRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddToClusterRequest) Reset()         { *m = AddToClusterRequest{} }
func (m *AddToClusterRequest) String() string { return proto.CompactTextString(m) }
func (*AddToClusterRequest) ProtoMessage()    {}
func (*AddToClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{5}
}
func (m *AddToClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddToClusterRequest.Unmarshal(m, b)
}
func (m *AddToClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddToClusterRequest.Marshal(b, m, deterministic)
}
func (dst *AddToClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddToClusterRequest.Merge(dst, src)
}
func (m *AddToClusterRequest) XXX_Size() int {
	return xxx_messageInfo_AddToClusterRequest.Size(m)
}
func (m *AddToClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddToClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddToClusterRequest proto.InternalMessageInfo

func (m *AddToClusterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddToClusterRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// AddToClusterResponse is a reponse on the AddToClusterRequest.
type AddToClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddToClusterResponse) Reset()         { *m = AddToClusterResponse{} }
func (m *AddToClusterResponse) String() string { return proto.CompactTextString(m) }
func (*AddToClusterResponse) ProtoMessage()    {}
func (*AddToClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{6}
}
func (m *AddToClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddToClusterResponse.Unmarshal(m, b)
}
func (m *AddToClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddToClusterResponse.Marshal(b, m, deterministic)
}
func (dst *AddToClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddToClusterResponse.Merge(dst, src)
}
func (m *AddToClusterResponse) XXX_Size() int {
	return xxx_messageInfo_AddToClusterResponse.Size(m)
}
func (m *AddToClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddToClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddToClusterResponse proto.InternalMessageInfo

// RemoveClusterRequest is a request to delete exists raft node on the cluster.
type RemoveClusterRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveClusterRequest) Reset()         { *m = RemoveClusterRequest{} }
func (m *RemoveClusterRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveClusterRequest) ProtoMessage()    {}
func (*RemoveClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{7}
}
func (m *RemoveClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveClusterRequest.Unmarshal(m, b)
}
func (m *RemoveClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveClusterRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveClusterRequest.Merge(dst, src)
}
func (m *RemoveClusterRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveClusterRequest.Size(m)
}
func (m *RemoveClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveClusterRequest proto.InternalMessageInfo

func (m *RemoveClusterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemoveClusterRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// RemoveClusterResponse is a reponse on the RemoveClusterRequest
type RemoveClusterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveClusterResponse) Reset()         { *m = RemoveClusterResponse{} }
func (m *RemoveClusterResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveClusterResponse) ProtoMessage()    {}
func (*RemoveClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{8}
}
func (m *RemoveClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveClusterResponse.Unmarshal(m, b)
}
func (m *RemoveClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveClusterResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveClusterResponse.Merge(dst, src)
}
func (m *RemoveClusterResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveClusterResponse.Size(m)
}
func (m *RemoveClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveClusterResponse proto.InternalMessageInfo

// MemeberRequest is list all raft node state.
type MemeberRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemeberRequest) Reset()         { *m = MemeberRequest{} }
func (m *MemeberRequest) String() string { return proto.CompactTextString(m) }
func (*MemeberRequest) ProtoMessage()    {}
func (*MemeberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{9}
}
func (m *MemeberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemeberRequest.Unmarshal(m, b)
}
func (m *MemeberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemeberRequest.Marshal(b, m, deterministic)
}
func (dst *MemeberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemeberRequest.Merge(dst, src)
}
func (m *MemeberRequest) XXX_Size() int {
	return xxx_messageInfo_MemeberRequest.Size(m)
}
func (m *MemeberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MemeberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MemeberRequest proto.InternalMessageInfo

// RaftMemberInfo is describe raft node information.
type RaftMemberInfo struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string    `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	State                NodeState `protobuf:"varint,3,opt,name=state,proto3,enum=api.NodeState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RaftMemberInfo) Reset()         { *m = RaftMemberInfo{} }
func (m *RaftMemberInfo) String() string { return proto.CompactTextString(m) }
func (*RaftMemberInfo) ProtoMessage()    {}
func (*RaftMemberInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{10}
}
func (m *RaftMemberInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftMemberInfo.Unmarshal(m, b)
}
func (m *RaftMemberInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftMemberInfo.Marshal(b, m, deterministic)
}
func (dst *RaftMemberInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftMemberInfo.Merge(dst, src)
}
func (m *RaftMemberInfo) XXX_Size() int {
	return xxx_messageInfo_RaftMemberInfo.Size(m)
}
func (m *RaftMemberInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftMemberInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RaftMemberInfo proto.InternalMessageInfo

func (m *RaftMemberInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RaftMemberInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *RaftMemberInfo) GetState() NodeState {
	if m != nil {
		return m.State
	}
	return Voter
}

// MemberResponse is a reponse obtain raft node list.
type MemberResponse struct {
	RaftNodes            []*RaftMemberInfo `protobuf:"bytes,1,rep,name=raftNodes" json:"raftNodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MemberResponse) Reset()         { *m = MemberResponse{} }
func (m *MemberResponse) String() string { return proto.CompactTextString(m) }
func (*MemberResponse) ProtoMessage()    {}
func (*MemberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_83327638d3dd4c42, []int{11}
}
func (m *MemberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberResponse.Unmarshal(m, b)
}
func (m *MemberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberResponse.Marshal(b, m, deterministic)
}
func (dst *MemberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberResponse.Merge(dst, src)
}
func (m *MemberResponse) XXX_Size() int {
	return xxx_messageInfo_MemberResponse.Size(m)
}
func (m *MemberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MemberResponse proto.InternalMessageInfo

func (m *MemberResponse) GetRaftNodes() []*RaftMemberInfo {
	if m != nil {
		return m.RaftNodes
	}
	return nil
}

func init() {
	proto.RegisterType((*FSMCommand)(nil), "api.FSMCommand")
	proto.RegisterType((*UpdateMetadataRequest)(nil), "api.UpdateMetadataRequest")
	proto.RegisterType((*UpdateMetadataResponse)(nil), "api.UpdateMetadataResponse")
	proto.RegisterType((*ExecuteCommandRequest)(nil), "api.ExecuteCommandRequest")
	proto.RegisterType((*ExecuteCommandResponse)(nil), "api.ExecuteCommandResponse")
	proto.RegisterType((*AddToClusterRequest)(nil), "api.AddToClusterRequest")
	proto.RegisterType((*AddToClusterResponse)(nil), "api.AddToClusterResponse")
	proto.RegisterType((*RemoveClusterRequest)(nil), "api.RemoveClusterRequest")
	proto.RegisterType((*RemoveClusterResponse)(nil), "api.RemoveClusterResponse")
	proto.RegisterType((*MemeberRequest)(nil), "api.MemeberRequest")
	proto.RegisterType((*RaftMemberInfo)(nil), "api.RaftMemberInfo")
	proto.RegisterType((*MemberResponse)(nil), "api.MemberResponse")
	proto.RegisterEnum("api.FSMCommandType", FSMCommandType_name, FSMCommandType_value)
	proto.RegisterEnum("api.CommandExecutionReply", CommandExecutionReply_name, CommandExecutionReply_value)
	proto.RegisterEnum("api.NodeState", NodeState_name, NodeState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MinimalCacheClient is the client API for MinimalCache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MinimalCacheClient interface {
	ExecuteCommand(ctx context.Context, in *ExecuteCommandRequest, opts ...grpc.CallOption) (*ExecuteCommandResponse, error)
	AddToCluster(ctx context.Context, in *AddToClusterRequest, opts ...grpc.CallOption) (*AddToClusterResponse, error)
	RemoveOnCluster(ctx context.Context, in *RemoveClusterRequest, opts ...grpc.CallOption) (*RemoveClusterResponse, error)
	MemberList(ctx context.Context, in *MemeberRequest, opts ...grpc.CallOption) (*MemberResponse, error)
}

type minimalCacheClient struct {
	cc *grpc.ClientConn
}

func NewMinimalCacheClient(cc *grpc.ClientConn) MinimalCacheClient {
	return &minimalCacheClient{cc}
}

func (c *minimalCacheClient) ExecuteCommand(ctx context.Context, in *ExecuteCommandRequest, opts ...grpc.CallOption) (*ExecuteCommandResponse, error) {
	out := new(ExecuteCommandResponse)
	err := c.cc.Invoke(ctx, "/api.MinimalCache/ExecuteCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minimalCacheClient) AddToCluster(ctx context.Context, in *AddToClusterRequest, opts ...grpc.CallOption) (*AddToClusterResponse, error) {
	out := new(AddToClusterResponse)
	err := c.cc.Invoke(ctx, "/api.MinimalCache/AddToCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minimalCacheClient) RemoveOnCluster(ctx context.Context, in *RemoveClusterRequest, opts ...grpc.CallOption) (*RemoveClusterResponse, error) {
	out := new(RemoveClusterResponse)
	err := c.cc.Invoke(ctx, "/api.MinimalCache/RemoveOnCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minimalCacheClient) MemberList(ctx context.Context, in *MemeberRequest, opts ...grpc.CallOption) (*MemberResponse, error) {
	out := new(MemberResponse)
	err := c.cc.Invoke(ctx, "/api.MinimalCache/MemberList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MinimalCacheServer is the server API for MinimalCache service.
type MinimalCacheServer interface {
	ExecuteCommand(context.Context, *ExecuteCommandRequest) (*ExecuteCommandResponse, error)
	AddToCluster(context.Context, *AddToClusterRequest) (*AddToClusterResponse, error)
	RemoveOnCluster(context.Context, *RemoveClusterRequest) (*RemoveClusterResponse, error)
	MemberList(context.Context, *MemeberRequest) (*MemberResponse, error)
}

func RegisterMinimalCacheServer(s *grpc.Server, srv MinimalCacheServer) {
	s.RegisterService(&_MinimalCache_serviceDesc, srv)
}

func _MinimalCache_ExecuteCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinimalCacheServer).ExecuteCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MinimalCache/ExecuteCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinimalCacheServer).ExecuteCommand(ctx, req.(*ExecuteCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinimalCache_AddToCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddToClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinimalCacheServer).AddToCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MinimalCache/AddToCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinimalCacheServer).AddToCluster(ctx, req.(*AddToClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinimalCache_RemoveOnCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinimalCacheServer).RemoveOnCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MinimalCache/RemoveOnCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinimalCacheServer).RemoveOnCluster(ctx, req.(*RemoveClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinimalCache_MemberList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemeberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinimalCacheServer).MemberList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MinimalCache/MemberList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinimalCacheServer).MemberList(ctx, req.(*MemeberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MinimalCache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.MinimalCache",
	HandlerType: (*MinimalCacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteCommand",
			Handler:    _MinimalCache_ExecuteCommand_Handler,
		},
		{
			MethodName: "AddToCluster",
			Handler:    _MinimalCache_AddToCluster_Handler,
		},
		{
			MethodName: "RemoveOnCluster",
			Handler:    _MinimalCache_RemoveOnCluster_Handler,
		},
		{
			MethodName: "MemberList",
			Handler:    _MinimalCache_MemberList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_83327638d3dd4c42) }

var fileDescriptor_api_83327638d3dd4c42 = []byte{
	// 922 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcb, 0x6e, 0xdb, 0x46,
	0x14, 0x35, 0x45, 0xcb, 0x8e, 0x6e, 0x5c, 0x86, 0x19, 0x3f, 0xa2, 0xb0, 0x46, 0x43, 0x10, 0x7d,
	0x18, 0x46, 0x65, 0xc6, 0x2e, 0x50, 0xa0, 0x6e, 0x81, 0x82, 0x51, 0x64, 0xc3, 0xa8, 0x25, 0xa5,
	0xa4, 0x12, 0xa0, 0x41, 0x81, 0x62, 0x24, 0x8e, 0xe8, 0xa9, 0x49, 0x0e, 0x4b, 0x8e, 0xac, 0x68,
	0xd3, 0x45, 0x57, 0x81, 0x96, 0xed, 0x5a, 0xab, 0x7e, 0x46, 0x7f, 0xa0, 0xfb, 0xee, 0xba, 0xc8,
	0xaa, 0x1f, 0x52, 0x70, 0x86, 0x94, 0x2d, 0x43, 0x7d, 0x20, 0x2b, 0xcd, 0xf0, 0x9c, 0x7b, 0xce,
	0x99, 0xf1, 0xbd, 0x63, 0xa8, 0xe1, 0x84, 0x1e, 0x24, 0x29, 0xe3, 0x0c, 0xa9, 0x38, 0xa1, 0x46,
	0x23, 0xa0, 0xfc, 0x62, 0xd4, 0x3f, 0x18, 0xb0, 0xc8, 0x0e, 0x58, 0xc0, 0x6c, 0x81, 0xf5, 0x47,
	0x43, 0xb1, 0x13, 0x1b, 0xb1, 0x92, 0x35, 0xc6, 0x6e, 0xc0, 0x58, 0x10, 0x12, 0x1b, 0x27, 0xd4,
	0xc6, 0x71, 0xcc, 0x38, 0xe6, 0x94, 0xc5, 0x59, 0x81, 0x7e, 0x2c, 0x7e, 0x06, 0x8d, 0x80, 0xc4,
	0x8d, 0x6c, 0x8c, 0x83, 0x80, 0xa4, 0x36, 0x4b, 0x04, 0x63, 0x09, 0xfb, 0xd3, 0x1b, 0xd6, 0xd1,
	0x98, 0xf2, 0x4b, 0x36, 0xb6, 0x03, 0xd6, 0x10, 0x60, 0xe3, 0x0a, 0x87, 0xd4, 0xc7, 0x9c, 0xa5,
	0x99, 0x3d, 0x5f, 0xca, 0x3a, 0xeb, 0x47, 0x80, 0x13, 0xaf, 0xdd, 0x64, 0x51, 0x84, 0x63, 0x1f,
	0x7d, 0x04, 0xab, 0x7c, 0x92, 0x90, 0xba, 0x62, 0x2a, 0x7b, 0xda, 0xd1, 0xe6, 0x41, 0x7e, 0xbe,
	0x6b, 0xb8, 0x37, 0x49, 0x88, 0x2b, 0x08, 0xe8, 0x14, 0xd6, 0x07, 0xf2, 0x63, 0xbd, 0x62, 0x2a,
	0x7b, 0x1b, 0x4f, 0x1a, 0xbf, 0xbf, 0x79, 0xb4, 0xf2, 0xe7, 0x9b, 0x47, 0x1f, 0xdc, 0xc8, 0x11,
	0x62, 0x7a, 0x69, 0x47, 0x34, 0xa6, 0x11, 0x0e, 0x1b, 0x03, 0x3c, 0xb8, 0x20, 0x76, 0x8a, 0xc7,
	0x07, 0x2e, 0x1e, 0xbb, 0x65, 0xb5, 0xf5, 0x25, 0x6c, 0x3f, 0x4f, 0x7c, 0xcc, 0x49, 0x9b, 0x70,
	0xec, 0x63, 0x8e, 0x5d, 0xf2, 0xc3, 0x88, 0x64, 0x1c, 0xe9, 0xa0, 0x5e, 0x92, 0x89, 0x48, 0x52,
	0x73, 0xf3, 0x25, 0xda, 0x82, 0xea, 0x15, 0x0e, 0x47, 0x44, 0x38, 0xd6, 0x5c, 0xb9, 0xb1, 0xea,
	0xb0, 0x73, 0x5b, 0x20, 0x4b, 0x58, 0x9c, 0x11, 0xeb, 0x10, 0xb6, 0x5b, 0xaf, 0xc8, 0x60, 0xc4,
	0x49, 0x91, 0xbf, 0x94, 0xae, 0x5f, 0x87, 0x97, 0xf2, 0xf3, 0x34, 0x1c, 0x76, 0x6e, 0x97, 0x48,
	0x31, 0xf4, 0x18, 0xaa, 0x29, 0x49, 0xc2, 0x49, 0x71, 0x35, 0x86, 0xb8, 0x9a, 0x82, 0x24, 0x4b,
	0x28, 0x8b, 0xdd, 0x9c, 0xe1, 0x4a, 0x22, 0x42, 0xb0, 0x4a, 0x39, 0x89, 0x8a, 0xb4, 0x62, 0x9d,
	0x1f, 0x21, 0xff, 0xcd, 0xea, 0xaa, 0xa9, 0xe6, 0x47, 0x10, 0x1b, 0xeb, 0x33, 0xd8, 0x74, 0x7c,
	0xbf, 0xc7, 0x9a, 0xe1, 0x28, 0xe3, 0x24, 0x2d, 0x63, 0x6a, 0x50, 0xa1, 0x65, 0xc2, 0x0a, 0xf5,
	0x73, 0x41, 0xec, 0xfb, 0x69, 0x29, 0x98, 0xaf, 0xad, 0x1d, 0xd8, 0x5a, 0x2c, 0x2d, 0xce, 0x7e,
	0x0c, 0x5b, 0x2e, 0x89, 0xd8, 0x15, 0x79, 0x0b, 0xcd, 0x07, 0xb0, 0x7d, 0xab, 0xb6, 0x10, 0xd5,
	0x41, 0x6b, 0x93, 0x88, 0xf4, 0xe7, 0x72, 0xd6, 0x4b, 0xd0, 0x5c, 0x3c, 0xe4, 0x6d, 0x12, 0xf5,
	0x49, 0x7a, 0x16, 0x0f, 0xd9, 0xff, 0x31, 0x40, 0xef, 0x43, 0x35, 0xe3, 0x98, 0x93, 0xba, 0x2a,
	0xee, 0x52, 0x13, 0x77, 0xd9, 0x61, 0x3e, 0xf1, 0xf2, 0xaf, 0xae, 0x04, 0xad, 0xa6, 0x70, 0xeb,
	0x5f, 0xfb, 0xa3, 0x43, 0xa8, 0xa5, 0x78, 0xc8, 0x73, 0x66, 0x56, 0x57, 0x4c, 0x75, 0xef, 0x6e,
	0xd1, 0xa2, 0x8b, 0x19, 0xdc, 0x6b, 0xd6, 0xfe, 0x05, 0x68, 0x8b, 0xfd, 0x8b, 0x3e, 0x84, 0x77,
	0x9c, 0x67, 0xcf, 0xce, 0xbf, 0xf9, 0xae, 0xd9, 0x6d, 0xb7, 0x9d, 0xce, 0x53, 0x7d, 0xc5, 0xd8,
	0x9c, 0xce, 0xcc, 0x7b, 0x27, 0x5e, 0xdb, 0x49, 0x92, 0x70, 0x52, 0x8e, 0xc2, 0x1e, 0x68, 0x92,
	0xd7, 0x6e, 0xf5, 0x9c, 0xa7, 0x4e, 0xcf, 0xd1, 0x15, 0x63, 0x6b, 0x3a, 0x33, 0xf5, 0x92, 0x58,
	0xf6, 0x9b, 0xb1, 0xfa, 0xfa, 0xd7, 0xf7, 0x56, 0xf6, 0x7f, 0x53, 0x60, 0x7b, 0x69, 0x3f, 0xa0,
	0x5d, 0x50, 0x3b, 0x67, 0xe7, 0xa5, 0x4f, 0x87, 0x86, 0xf3, 0xde, 0xca, 0x51, 0x03, 0x2a, 0xdd,
	0xaf, 0x74, 0xc5, 0x40, 0xd3, 0x99, 0xa9, 0x75, 0x2f, 0x17, 0x30, 0x0b, 0xd6, 0xbc, 0x9e, 0x7b,
	0xd6, 0x39, 0xd5, 0x2b, 0xc6, 0xce, 0x74, 0x66, 0x22, 0x8f, 0xa7, 0x34, 0x0e, 0x16, 0x38, 0x26,
	0x54, 0xbd, 0xf3, 0xb3, 0x66, 0x4b, 0x57, 0x8d, 0xed, 0xe9, 0xcc, 0xbc, 0xef, 0x85, 0x74, 0x40,
	0x16, 0x18, 0xbb, 0xa0, 0xb6, 0x5c, 0x57, 0x5f, 0x95, 0xfe, 0xad, 0x34, 0xbd, 0x89, 0x16, 0xe9,
	0x27, 0x50, 0x9b, 0xff, 0x01, 0xf2, 0x2e, 0x7d, 0xd1, 0xed, 0xb5, 0x5c, 0x7d, 0xc5, 0xa8, 0x4d,
	0x67, 0x66, 0xf5, 0x05, 0xe3, 0x24, 0x45, 0x06, 0xdc, 0xe9, 0x74, 0x3b, 0x12, 0x50, 0x8c, 0x8d,
	0xe9, 0xcc, 0xbc, 0xd3, 0x61, 0xf1, 0x95, 0xc0, 0xea, 0xb0, 0xee, 0xf5, 0x9c, 0x53, 0x99, 0xf4,
	0xee, 0x74, 0x66, 0xae, 0x7b, 0x1c, 0x07, 0x34, 0x0e, 0xf2, 0x2a, 0xef, 0xf9, 0xc9, 0x89, 0xeb,
	0x9c, 0xe6, 0x09, 0x45, 0x95, 0x37, 0x1a, 0x0e, 0x53, 0x1c, 0x10, 0x69, 0x7d, 0xf4, 0x5a, 0x85,
	0x8d, 0xb6, 0x7c, 0x24, 0x9a, 0xf9, 0x1b, 0x81, 0xfa, 0xa0, 0x2d, 0x0e, 0x21, 0x92, 0xd3, 0xb6,
	0x74, 0x98, 0x8d, 0x77, 0x97, 0x62, 0x45, 0xc7, 0x3e, 0xf8, 0xe9, 0x8f, 0xbf, 0x7e, 0xa9, 0xdc,
	0xb7, 0x36, 0xc4, 0x1b, 0x7b, 0x75, 0x68, 0x93, 0x57, 0x64, 0x70, 0xac, 0xec, 0xa3, 0x6f, 0x61,
	0xe3, 0xe6, 0xdc, 0xa0, 0xba, 0x50, 0x59, 0x32, 0x85, 0xc6, 0xc3, 0x25, 0xc8, 0x3f, 0xa9, 0x7f,
	0xcf, 0x68, 0x9c, 0xab, 0x0f, 0xe0, 0x9e, 0x9c, 0xa0, 0x6e, 0x5c, 0x1a, 0x48, 0x99, 0x65, 0x33,
	0x69, 0x18, 0xcb, 0xa0, 0xc2, 0xe2, 0xa1, 0xb0, 0xd8, 0xb4, 0xb4, 0xd2, 0x22, 0x15, 0xb4, 0xdc,
	0xe4, 0x6b, 0x00, 0xd9, 0xf3, 0xe7, 0x34, 0xe3, 0x48, 0x0e, 0xc2, 0xe2, 0x78, 0x1a, 0xf3, 0x8f,
	0xfd, 0x7f, 0x93, 0x8c, 0x04, 0x7e, 0xac, 0xec, 0x3f, 0xf9, 0xe2, 0x67, 0x07, 0xa1, 0xea, 0x91,
	0x7a, 0x78, 0xf0, 0x78, 0x5f, 0xa9, 0xa4, 0x6b, 0xb0, 0x1a, 0xb3, 0x98, 0xbc, 0xfc, 0x8f, 0x37,
	0x1d, 0x27, 0xf4, 0x73, 0x9c, 0xd0, 0xfe, 0x9a, 0xf8, 0x8f, 0xf2, 0xc9, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x4d, 0x3f, 0x9e, 0x8a, 0x16, 0x07, 0x00, 0x00,
}
